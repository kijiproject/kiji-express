<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.kiji.express</groupId>
  <artifactId>kiji-express-root</artifactId>
  <version>2.1.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <inceptionYear>2013</inceptionYear>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <parent>
    <groupId>org.kiji.pom</groupId>
    <artifactId>root-pom</artifactId>
    <version>1.2.1-SNAPSHOT</version>
  </parent>

  <modules>
    <module>kiji-express</module>
    <module>kiji-express-tools</module>
    <module>kiji-express-examples</module>
    <module>kiji-express-archetype</module>
  </modules>

  <properties>
    <!-- Kiji versions. -->
    <kiji-schema.version>1.6.0-SNAPSHOT</kiji-schema.version>
    <kiji-schema-shell.version>1.4.0-SNAPSHOT</kiji-schema-shell.version>
    <kiji-mapreduce.version>1.3.0-SNAPSHOT</kiji-mapreduce.version>
    <fake-hbase.version>0.3.0-SNAPSHOT</fake-hbase.version>
    <kiji-annotations.version>1.1.2-SNAPSHOT</kiji-annotations.version>
    <kiji-platforms.version>1.4.0-SNAPSHOT</kiji-platforms.version>

    <!-- Dependency versions. -->
    <elephant-bird.version>4.4</elephant-bird.version>
    <kryo.version>2.21</kryo.version>
    <scala-reflect.version>2.10.4</scala-reflect.version>
    <scalding.version>0.9.1</scalding.version>
    <cascading.version>2.5.2</cascading.version>
    <cascading-kryo.version>0.4.7</cascading-kryo.version>
    <chill.version>0.3.6</chill.version>
    <!--Cassandra requires Guava 15-->
    <guava.version>15.0</guava.version>

    <!-- Plugin versions. -->
    <!--
        Version 1.7.6 of the avro-maven-plugin includes a fix for stringTypes + alias usage.
        See AVRO-1433 for more information.
    -->
    <avro-maven-plugin.version>1.7.6</avro-maven-plugin.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- Kiji dependencies. -->
      <dependency>
        <groupId>org.kiji.schema</groupId>
        <artifactId>kiji-schema</artifactId>
        <version>${kiji-schema.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.kiji.schema-shell</groupId>
        <artifactId>kiji-schema-shell</artifactId>
        <version>${kiji-schema-shell.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.kiji.mapreduce</groupId>
        <artifactId>kiji-mapreduce</artifactId>
        <version>${kiji-mapreduce.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.kiji.annotations</groupId>
        <artifactId>annotations</artifactId>
        <version>${kiji-annotations.version}</version>
      </dependency>

      <!-- Normal dependencies. -->

      <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>

        <version>1.2.17</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>com.twitter.elephantbird</groupId>
        <artifactId>elephant-bird-core</artifactId>

        <version>${elephant-bird.version}</version>
        <scope>compile</scope>
        <exclusions>
          <exclusion>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>com.twitter.elephantbird</groupId>
        <artifactId>elephant-bird-hadoop-compat</artifactId>
        <version>${elephant-bird.version}</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>com.esotericsoftware.kryo</groupId>
        <artifactId>kryo</artifactId>
        <version>${kryo.version}</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>com.twitter</groupId>
        <artifactId>chill-java</artifactId>
        <version>${chill.version}</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>com.twitter</groupId>
        <artifactId>chill_${scala.version}</artifactId>
        <version>${chill.version}</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>com.twitter</groupId>
        <artifactId>scalding-core_${scala.version}</artifactId>
        <version>${scalding.version}</version>
        <scope>compile</scope>
        <exclusions>
          <exclusion>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-core</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.esotericsoftware.kryo</groupId>
            <artifactId>kryo</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>com.twitter</groupId>
        <artifactId>scalding-args_${scala.version}</artifactId>
        <version>${scalding.version}</version>
        <scope>compile</scope>
      </dependency>

      <dependency>
        <groupId>cascading</groupId>
        <artifactId>cascading-core</artifactId>
        <version>${cascading.version}</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>cascading</groupId>
        <artifactId>cascading-hadoop</artifactId>
        <version>${cascading.version}</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>cascading.kryo</groupId>
        <artifactId>cascading.kryo</artifactId>
        <version>${cascading-kryo.version}</version>
        <scope>compile</scope>
      </dependency>

      <dependency>
        <groupId>org.kiji.platforms</groupId>
        <artifactId>kiji-compile-platform</artifactId>
        <type>pom</type>

        <version>${kiji-platforms.version}</version>
        <scope>provided</scope>
      </dependency>

      <!-- Test dependencies. -->
      <dependency>
        <groupId>org.kiji.schema-shell</groupId>
        <artifactId>kiji-schema-shell</artifactId>
        <type>test-jar</type>
        <classifier>tests</classifier>

        <version>${kiji-schema-shell.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.kiji.schema</groupId>
        <artifactId>kiji-schema</artifactId>
        <type>test-jar</type>
        <classifier>tests</classifier>

        <version>${kiji-schema.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.kiji.testing</groupId>
        <artifactId>fake-hbase</artifactId>

        <version>${fake-hbase.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.kiji.platforms</groupId>
        <artifactId>kiji-test-platform</artifactId>
        <type>pom</type>

        <version>${kiji-platforms.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.kiji.express</groupId>
        <artifactId>kiji-express</artifactId>
        <type>test-jar</type>
        <classifier>tests</classifier>

        <version>${project.version}</version>
        <scope>test</scope>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <build>
    <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
        </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <!--
            Express depends on the oldest version of KijiSchema / KIJIMR that
            supports it.
            To test whether the latest Kiji dependency SNAPSHOTs have introduced
            a regression:

            Run the following commands in your shell

              mvn versions:update-properties -N # Update the kiji-*.version properties
                                                # in the top-level pom file; don't recurse.
              mvn clean verify                  # Uses the new snapshot versions
              mvn versions:revert               # Revert the pom file to before update-properties.
                                      # Do not check in new Kiji SNAPSHOT dependencies in the pom.
          -->
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <configuration>
            <includeProperties>
              kiji-schema.version,kiji-schema-shell.version,kiji-mapreduce.version
            </includeProperties>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>org.kiji.schema</groupId>
              <artifactId>kiji-schema</artifactId>
              <version>${kiji-schema.version}</version>
            </dependency>
            <dependency>
              <groupId>org.kiji.schema-shell</groupId>
              <artifactId>kiji-schema-shell</artifactId>
              <version>${kiji-schema-shell.version}</version>
            </dependency>
            <dependency>
              <groupId>org.kiji.mapreduce</groupId>
              <artifactId>kiji-mapreduce</artifactId>
              <version>${kiji-mapreduce.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.apache.avro</groupId>
          <artifactId>avro-maven-plugin</artifactId>
          <version>${avro-maven-plugin.version}</version>
          <configuration>
            <!-- Record fields are now private : use accessors always. -->
            <fieldVisibility>private</fieldVisibility>

            <!-- Avro string compiled to java.lang.String instead of CharSequence -->
            <stringType>String</stringType>
          </configuration>
        </plugin>
        <plugin>
          <groupId>net.alchim31.maven</groupId>
          <artifactId>scala-maven-plugin</artifactId>
        </plugin>
        <plugin>
          <groupId>org.scalastyle</groupId>
          <artifactId>scalastyle-maven-plugin</artifactId>
          <configuration>
            <failOnViolation>true</failOnViolation>
            <includeTestSourceDirectory>true</includeTestSourceDirectory>
            <failOnWarning>false</failOnWarning>
            <sourceDirectory>${basedir}/src/main/scala</sourceDirectory>
            <testSourceDirectory>${basedir}/src/test/scala</testSourceDirectory>
            <configLocation>${basedir}/../kiji-express/src/main/scalastyle/scalastyle_config.xml</configLocation>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <!-- ScalaTest -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
          <configuration>
            <!-- Fixes the build on OS X based computers. -->
            <argLine>-Dsun.io.serialization.extendedDebugInfo=true -Xmx2G -XX:MaxPermSize=512m</argLine>
            <includes>
              <include>**/*Suite.scala</include>
              <include>%regex[.*/.*Suite.class]</include>
            </includes>
            <!-- parallel tests are temporariliy disabled because of thread-unsafety in LocalJobRunner -->
            <!-- MAPREDUCE-5367 should address this issue. -->
            <!-- Run tests creating 2 test JVMs per processor core. -->
            <!--<forkCount>2C</forkCount>-->
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <repositories>
    <repository>
      <id>kiji-releases</id>
      <name>Kiji releases</name>
      <url>https://repo.wibidata.com/artifactory/kiji-packages</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>

    <!-- ScalaTest -->
    <repository>
      <id>Sonatype OSS Repository</id>
      <url>https://oss.sonatype.org/content/groups/public</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>

    <!-- Cascading -->
    <repository>
      <id>conjars.org</id>
      <url>http://conjars.org/repo</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>

  <scm>
    <connection>scm:git:git@github.com:kijiproject/kiji-express.git</connection>
    <url>scm:git:git@github.com:kijiproject/kiji-express.git</url>
    <developerConnection>scm:git:git@github.com:kijiproject/kiji-express.git</developerConnection>
  </scm>
</project>
